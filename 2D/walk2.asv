function [out1, out2] = walk2(xi, steps, graph);
% WALK2   Walk the robot for steps, optionally choose to graph or animate 
% the walker.
%
% [out1, out2] = walk2(xi, steps, graph);
% 
% If graph equals 1, 0 or null then out1 and out2 are xlast and xcycle.
% If graph equals 2 then out1 is a movie output from animate2, and out2 is
% null.
%
% xafter = state after computing impact
% tafter = time at which the guard triggers
% xbefore = all states over time prior to computing impact
% tbefore = the corresponding times, always from 0 to tlast.
%             tbefore(end,:) = tafter
% tlast = the tbefore from the previous step
%
% out1 = the state after the very last step is completed
% out2 = all of the states from 

%
% global M Mp g L R K slope eqnhandle dim
global M Mp g L R K slope eqnhandle modeldir wd dim

% Parse inputs ...
if nargin <= 2
    graph = 0;
end        

if length(M) == 0 | length(slope) == 0
    fprintf('Define your global variables first.');
    return
end
% ... end parse inputs.

for step=1:steps
    [xafter tafter xbefore tbefore] = step2(xi);
    
    % Check outputs
    if length(tafter) == 0 | length(xafter) == 0
        fprintf(1, 'walk2 error: Foot did not make contact.\n');
%         xlast = [];
%         xcycle = [];
%         out1 = [];
%         out2 = [];
%         break
        xafter = xbefore(end,:);
        tafter = tbefore(end,:);
    elseif length(tafter) ~= 1
%         step;
%         xafter;
%         tafter;
%         fprintf(1, 'walk2 msg: Why does the guard trigger more than once?\n');
%         fprintf(1, 'tlast length: %i, new value: %g.\n', length(tafter), max(tafter));
        tafter = max(tafter);
    end
    
    if step == 1
        t = [tbefore ; tbefore(end)];
        x = [xbefore ; xafter];
    else
        tbefore = tbefore + tlast;
        t = [t ; tbefore ; tbefore(end)];
        x = [x ; xbefore ; xafter];
    end
    tlast = tbefore(end);
    xi = xafter;
end

xlast = x(end,:);
xcycle = [t x];
out1 = xlast;
out2 = xcycle;

if graph == 1
    % Do some funky stuff to print out the titles properly.
    for i=1:length(modeldir)
        if wd(
    
% figure('Position', [left bottom width height])
screenSize = get(0, 'ScreenSize');
% figure('Position', [screenSize(3)/2 0                   screenSize(3)/2     screenSize(4)/2.5])
%     subplot(1,2,1)
%     plot(x(:,1), x(:,3), 'r')
%     title({'S vs. Sdot';['slope =',num2str(slope)]});
%     subplot(1,2,2)
%     plot(x(:,2), x(:,4), 'b')
%     title({'NS vs. NSdot';['slope =',num2str(slope)]});
figure('Position', [0               screenSize(4)/2     screenSize(3)/2     screenSize(4)/2.5])
    plot(t, x(:,1), 'r', t, x(:,2), 'b', t, x(:,1)+x(:,2)+2*slope, 'g')
    titleString = sprintf('%s\nS (red), NS (blue), guard (green)', modeldir);
    title(titleString);
% figure('Position', [screenSize(3)/2 screenSize(4)/2     screenSize(3)/2     screenSize(4)/2.5])
%     plot(t, x(:,2)-x(:,1), 'gx')
%     title('S-NS');
% figure('Position', [0               0                   screenSize(3)/2     screenSize(4)/2.5])
%     plot(t, x(:,3), 'r', t, x(:,4), 'b')
%     title('Sdot (red), NSdot (blue)');
    
elseif graph == 2
    
    out1 = xlast;
    out2 = animate2(xcycle);
    
end
